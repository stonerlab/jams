name: Quick Build

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  ENV_MODULES: cmake ninja git gnu/8.3.0 cuda/11.6.2 mkl/2018.2 hdf5/1.10.5

jobs:
  quick_build:
    name: Build JAMS - Release - CUDA 11
    runs-on: self-hosted

    # Skip in pull requests because we will run the more extensive pre-merge
    # actions.
    if: github.event_name != 'pull_request'

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: |
        source /etc/profile.d/modules.sh && module load $ENV_MODULES
        cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: |
        source /etc/profile.d/modules.sh && module load $ENV_MODULES
        cmake $GITHUB_WORKSPACE -G Ninja -DJAMS_BUILD_IN_DEPENDENCIES=ON -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DJAMS_BUILD_CUDA=ON -DJAMS_BUILD_TESTS=OFF 

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: |
        source /etc/profile.d/modules.sh && module load $ENV_MODULES
        cmake --build . --config $BUILD_TYPE

