name: JAMS Matrix Build

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  # Allow manual triggers
  workflow_dispatch:


env:
  ENV_MODULES: cmake ninja git gnu/8.3.0 cuda/10.1.105 mkl/2018.2 hdf5-cxx/1.8.20

jobs:
  matrix_build:
    name: Matrix Build (Release - CUDA ON/OFF - Built-in Deps)
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: self-hosted
    strategy:
      matrix:
        # Build CPU and CUDA variants because there's a lot of ifdefs which can break things
        BUILD_CUDA: [ON, OFF]
        BUILD_TYPE: [Release]

                
    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: |
        source /etc/profile.d/modules.sh && module load $ENV_MODULES
        cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12

      # We use the built-in dependencies here because that is how we typically deploy at the moment.
      # This is slower than using the env modules on the build server but better reflects
      # how well JAMS will build elsewhere.
      run: |
        source /etc/profile.d/modules.sh && module load $ENV_MODULES
        cmake $GITHUB_WORKSPACE -G Ninja -DJAMS_BUILD_IN_DEPENDENCIES=ON -DCMAKE_BUILD_TYPE=${{ matrix.BUILD_TYPE }} -DJAMS_BUILD_CUDA=${{ matrix.BUILD_CUDA }}

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: |
        source /etc/profile.d/modules.sh && module load $ENV_MODULES
        cmake --build . --config $BUILD_TYPE

#     - name: Test
#       working-directory: ${{github.workspace}}/build
#       shell: bash
#       # Execute tests defined by the CMake configuration.  
#       # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#       run: ctest -C $BUILD_TYPE
