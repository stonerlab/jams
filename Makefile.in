SHELL = /bin/sh

withdebug=0
withcuda=0

cputype = $(shell uname -m | sed "s/\\ /_/g")
systype = $(shell uname -s)
commit = $(shell git rev-parse HEAD)

ifeq ($(systype),Darwin)
withcuda=0
CXX = clang++
OPTFLAGS = -stdlib=libc++ -march=native -O3 -funroll-loops -m64
COPTIONS = -Wall -DDarwin
else
CXX = g++
OPTFLAGS = -march=native -O3 -funroll-loops -m64
COPTIONS = -Wall -DLinux
CUDA = /usr/local/cuda/bin/nvcc
CUDAOPTS = -O3 -DNDEBUG -DCUDA -ccbin /usr/bin/clang++ -m64 -Xcompiler -arch -Xcompiler x86_64 -Xcompiler -stdlib=libstdc++ \
					 -gencode=arch=compute_20,code=sm_20 \
					 -gencode=arch=compute_20,code=compute_20 \
					 -gencode=arch=compute_35,code=sm_35 \
		       -gencode=arch=compute_35,code=compute_35
endif

# Linker information
LDOPTIONS = 
LD = $(CXX)

# Compile input/output file specification
SOURCEFILE = -c $<
OUTPUTFILE = -o $@

# Output specification for executables
EXEOUTPUTFILE = -o $@

#----------------------------------------------------------------------
# Build specific options 
#----------------------------------------------------------------------

OPTFLAGS += -DGITCOMMIT=$(commit)

ifeq ($(withcuda),1)
	OPTFLAGS += -DCUDA
endif

ifeq ($(withdebug),1)
	OPTFLAGS += -g -DDEBUG
	LDOPTIONS += -g
else 
	OPTFLAGS += -DNDEBUG	# turn off asserts
endif

LIBCONFIGDIR = ./libconfig

INCLUDES = -I$(TOPDIR)/core -I$(TOPDIR)/physics -I$(TOPDIR)/monitors -I$(TOPDIR)/solvers -I/sfw/libconfig-1.4.9/include -I/usr/local/cuda/include -I/opt/intel/Compiler/11.1/059/mkl/include -I$(TOPDIR)/jbLib
CFLAGS = $(COPTIONS) $(OPTFLAGS) $(INCLUDES)

MKLroot = /opt/intel/Compiler/11.1/059/mkl/lib/em64t

ifeq ($(withcuda),1)
	#ifeq ($(cputype),x86_64)
		#LIBSDIR = -L/usr/local/cuda/lib64
	#else
		#LIBSDIR = -L/usr/local/cuda/lib
	#endif
		LIBS = -L/usr/local/cuda/lib -lcudart -lcurand -lcublas -lcusparse
endif

LIBS +=  -lfftw3 -lconfig++ 

LDFLAGS = $(LIBSDIR)
